{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template for Hello world application.",

  "Parameters" : {

    "InstanceType" : {
      "Description" : "Web Server EC2 instance type",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro", "t2.micro" ],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  }
    }
  ,
    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-0f4cfd64", "HVM64" : "ami-0d4cfd66", "HVMG2" : "ami-5b05ba30"},
      "us-west-2"        : {"PV64" : "ami-d3c5d1e3", "HVM64" : "ami-d5c5d1e5", "HVMG2" : "ami-a9d6c099"},
      "us-west-1"        : {"PV64" : "ami-85ea13c1", "HVM64" : "ami-87ea13c3", "HVMG2" : "ami-37827a73"},
      "eu-west-1"        : {"PV64" : "ami-d6d18ea1", "HVM64" : "ami-e4d18e93", "HVMG2" : "ami-72a9f105"},
      "eu-central-1"     : {"PV64" : "ami-a4b0b7b9", "HVM64" : "ami-a6b0b7bb", "HVMG2" : "ami-a6c9cfbb"},
      "ap-northeast-1"   : {"PV64" : "ami-1a1b9f1a", "HVM64" : "ami-1c1b9f1c", "HVMG2" : "ami-f644c4f6"},
      "ap-southeast-1"   : {"PV64" : "ami-d24b4280", "HVM64" : "ami-d44b4286", "HVMG2" : "ami-12b5bc40"},
      "ap-southeast-2"   : {"PV64" : "ami-ef7b39d5", "HVM64" : "ami-db7b39e1", "HVMG2" : "ami-b3337e89"},
      "sa-east-1"        : {"PV64" : "ami-5b098146", "HVM64" : "ami-55098148", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-bec45887", "HVM64" : "ami-bcc45885", "HVMG2" : "NOT_SUPPORTED"}
    }

  },

  "Resources" : {

    "WebServerGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH and HTTP access",
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" },
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" }
        ]
      }
    },

    "CfnUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path" : "/",
        "Policies" : [{
          "PolicyName" : "Admin",
          "PolicyDocument" : {
            "Statement" : [{
              "Effect" : "Allow",
              "Action" : "*",
              "Resource" : "*"
            }]
          }
        }]
      }
    },

    "HostKeys" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref": "CfnUser" }
      }
    },

    "WebServer": {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "Comment" : "Install a Hello World application",
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages": {
              "yum": {
                "java-1.7.0-openjdk-devel": [],
                "tomcat6": []
              }
            }
          },
          "files" : {
            "/usr/share/tomcat6/webapps/helloworld.war" : {
              "source" : "https://s3-ap-southeast-1.amazonaws.com/sapientbucket/war/helloworld.war",
              "mode"   : "000500",
              "owner"  : "tomcat",
              "group"  : "tomcat"
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {"Ref": "AWS::Region"},
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {"Ref": "InstanceType"},
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {"Ref": "InstanceType"},
        "SecurityGroups": [{"Ref": "WebServerGroup"}],
        "KeyName": "carrot",
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebServer"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -v\n",
                "date > /home/ec2-user/starttime\n",
                "yum update -y aws-cfn-bootstrap\n",
                "## Error reporting helper function\n",
                "function error_exit\n",
                "{\n",
                "   /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                {"Ref": "WaitHandle"},
                "'\n",
                "   exit 1\n",
                "}\n",
                "## Initialize CloudFormation bits\n",
                "/opt/aws/bin/cfn-init -v -s ",
                {"Ref": "AWS::StackName"},
                " -r FormEngine",
                "   --access-key ",
                {"Ref": "HostKeys"},
                "   --secret-key ",
                {
                  "Fn::GetAtt": [
                    "HostKeys",
                    "SecretAccessKey"
                  ]
                },
                "   --region ",
                {"Ref": "AWS::Region"},
                " > /tmp/cfn-init.log 2>&1 || error_exit $(</tmp/cfn-init.log)\n",
                "# Add Tomcat user to sudoers and disable tty\n",
                "echo \"tomcat ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n",
                "echo \"Defaults:%tomcat !requiretty\" >> /etc/sudoers\n",
                "echo \"Defaults:tomcat !requiretty\" >> /etc/sudoers\n",
                "# Set JVM settings\n",
                "echo \"JAVA_OPTS='${JAVA_OPTS} -Xms512m -Xmx512m -XX:PermSize=256m -XX:MaxPermSize=512m'\" >> /etc/tomcat6/tomcat6.conf\n",
                "# Tomcat Setup\n",
                "chown -R tomcat:tomcat /usr/share/tomcat6/\n",
                "chkconfig tomcat6 on\n",
                "chkconfig --level 345 tomcat6 on\n",
                "# Proxy all requests to Tomcat\n",
                "# Start servers\n",
                "service tomcat6 start\n",
                "# Send signal to WaitHandle that the setup is completed\n",
                "/opt/aws/bin/cfn-signal",
                " -e 0",
                " '",
                {"Ref": "WaitHandle"},
                "'",
                "\n",
                "date > /home/ec2-user/stoptime"
              ]
            ]
          }
        }
      }
      },

    "IPAddress" : {
      "Type" : "AWS::EC2::EIP"
    },

    "IPAssoc" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "InstanceId" : { "Ref" : "WebServer" },
        "EIP" : { "Ref" : "IPAddress" }
      }
    },
    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    }
  },

  "Outputs" : {
    "InstanceIPAddress" : {
      "Value" : { "Ref" : "IPAddress" },
      "Description" : "public IP address of the new WebServer"
    },
    "InstanceName" : {
      "Value" : { "Fn::GetAtt" : [ "WebServer", "PublicDnsName" ]},
      "Description" : "public DNS name of the new WebServer"
    }
  }
}
